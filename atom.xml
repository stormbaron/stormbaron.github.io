<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Baronli</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-07T00:20:24.687Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Baronli</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android在AndroidStudio中添加Module依赖的注意事项</title>
    <link href="http://yoursite.com/2017/08/07/Android%E5%9C%A8AndroidStudio%E4%B8%AD%E5%BC%95%E7%94%A8Module%E4%BE%9D%E8%B5%96%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://yoursite.com/2017/08/07/Android在AndroidStudio中引用Module依赖注意事项/</id>
    <published>2017-08-07T00:20:24.687Z</published>
    <updated>2017-08-07T00:20:24.687Z</updated>
    
    <content type="html"><![CDATA[<p>####Android在AndroidStudio中添加Module依赖的注意事项<br>我们在开发过程中常常会有一些模块需要作为依赖，或者将部分功能单独抽出作为一个library使用，在Android studio中，我们可以通过建立多个module进行实现。<br>首先我们看看作为普通module和作为library的module的区别，<br>主要在build.gradle中<br><br>app的<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">'com.android.application'</span></div><div class="line">defaultConfig &#123;</div><div class="line">        applicationId <span class="string">"com.julit.elevator_maint"</span></div><div class="line">        minSdkVersion <span class="number">17</span></div><div class="line">        targetSdkVersion <span class="number">21</span></div><div class="line">        ...</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>作为library的module<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">apply plugin: <span class="string">'com.android.library'</span></div><div class="line">defaultConfig &#123;</div><div class="line">        minSdkVersion <span class="number">17</span></div><div class="line">        targetSdkVersion <span class="number">21</span></div><div class="line">        ...</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>添加依赖　打开Project的Project Structure，可以看到目前项目下面有３个module（都是可以运行的module），目前选中了app（一般项目在创建时的默认module）然后我们点击右上角的Dependencies可以看到右侧有加号，点击在此我们可以添加３种类型的依赖，选择　Module Dependency<br><img src="http://img.blog.csdn.net/20170613140951848?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMDIyODQ0OA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>然后我们就成功的添加了依赖<br><br><strong>踩坑记录</strong><br><br>依照上面的过程，我们可以很容易地给主程序添加依赖，但是存在一些坑<br></p>
<p>我们都会遇到的一些问题，在此我将自己的一些遇到的一些问题的解决办法进行记录和说明，希望减少这种问题的遇到。</p>
<p>######（1）Manifest merger failed with multiple errors<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Error:Execution failed <span class="keyword">for</span> task <span class="string">':app:processDebugManifest'</span>.</div><div class="line">&gt; Manifest merger failed with multiple errors, see logs</div></pre></td></tr></table></figure></p>
<p><strong>原因：</strong><br>AS的Gradle插件默认会启用Manifest Merger Tool，如果Library项目中也定义了与主项目相同的属性（例如默认生成的Android:icon和android:theme），则此时会合并失败，并报上面的错误。<br><br>或者是因为<br>app’s minSdk is higher than any library’s minSdk.<br>要求app’s minSdk &gt;= libraries minSdk<br><br><br>解决方法有以下2种：<br><br>方法1：在Manifest.xml的application标签下添加tools:replace=”android:icon, android:theme”（多个属性用,隔开，并且在manifest根标签上加入xmlns:tools=”<a href="http://schemas.android.com/tools&quot;）" target="_blank" rel="external">http://schemas.android.com/tools&quot;）</a><br><br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;manifest xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span>  <span class="comment">// add tools line here </span></div><div class="line">    <span class="keyword">package</span>=<span class="string">"yourpackage"</span>&gt;</div><div class="line">    &lt;application</div><div class="line">        android:allowBackup=<span class="string">"true"</span></div><div class="line">        android:icon=<span class="string">"@mipmap/ic_launcher"</span></div><div class="line">        android:label=<span class="string">"@string/app_name"</span></div><div class="line">        android:supportsRtl=<span class="string">"true"</span></div><div class="line">        android:theme=<span class="string">"@style/AppTheme"</span></div><div class="line">        tools:replace=<span class="string">"android:icon"</span>&gt;  </div><div class="line">.....</div><div class="line">&lt;/application&gt;</div><div class="line">&lt;/manifest&gt;</div></pre></td></tr></table></figure></p>
<p>方法2：在build.gradle根标签上加上useOldManifestMerger true,但是我们在使用这种方法时有可能会爆出下面的错误<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Error:(<span class="number">4</span>, <span class="number">0</span>) Gradle DSL method not found: <span class="string">'useOldManifestMerger()'</span></div><div class="line">Possible causes:&lt;ul&gt;&lt;li&gt;The project <span class="string">'JuliAPP_AS'</span> may be using a version of the Android Gradle plug-<span class="function">in that does not contain the <span class="title">method</span> <span class="params">(e.g. <span class="string">'testCompile'</span> was added in <span class="number">1.1</span><span class="number">.0</span>)</span>.</span></div><div class="line">&lt;a href="fixGradleElements"&gt;Upgrade plugin to version 2.3.2 and sync project&lt;/a&gt;&lt;/li&gt;&lt;li&gt;The project 'JuliAPP_AS' may be using a version of Gradle that does not contain the method.</div><div class="line">&lt;a href="open.wrapper.file"&gt;Open Gradle wrapper file&lt;/a&gt;&lt;/li&gt;&lt;li&gt;The build file may be missing a Gradle plugin.</div><div class="line">&lt;a href="apply.gradle.plugin"&gt;Apply Gradle plugin&lt;/a&gt;&lt;/li&gt;</div><div class="line"></div><div class="line">Error:(<span class="number">10</span>, <span class="number">0</span>) <span class="function">Could not find method <span class="title">useOldManifestMerger</span><span class="params">()</span> <span class="keyword">for</span> arguments [<span class="keyword">true</span>] on object of type com.android.build.gradle.AppExtension.</span></div></pre></td></tr></table></figure></p>
<p>######（2）APP安装时出现2个图标<br>原因是我们在AndroidMamifest.xml中的<application的标签依然存在重复的属性，我们在build.gradle中将application改成了library但是此处如果没改会导致2个图标。 <figure="" class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"com.juli.commonlibrary"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">application</span>  <span class="attr">android:allowBackup</span>=<span class="string">"true"</span> <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></div><div class="line"><span class="tag">         <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span> <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span> &gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">"com.juli.commonlibrary.PhotoUtil.ImageGetActivity"</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                 <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></div><div class="line">                 <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></div><div class="line">             <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">application</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></div></pre></td></tr></table></application的标签依然存在重复的属性，我们在build.gradle中将application改成了library但是此处如果没改会导致2个图标。></p>
<p>修改成<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"com.juli.commonlibrary"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">application</span>  <span class="attr">android:allowBackup</span>=<span class="string">"true"</span> <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span> &gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">"com.juli.commonlibrary.PhotoUtil.ImageGetActivity"</span>/&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">application</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>但是在使用第二种方法时也有可能爆出上面的问题，</p>
<p>######（３）报名相同导致冲突　A library uses the same package as this project<br><strong>解决方法</strong>在Build.gradle中添加enforceUniquePackageName = false，如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">    compileSdkVersion <span class="number">23</span></div><div class="line">    buildToolsVersion <span class="string">"23.0.1"</span></div><div class="line">    enforceUniquePackageName = <span class="keyword">false</span></div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>####Android studio其他使用注意事项（借鉴）</p>
<p>1、每次保存的时候，每行多余的空格和TAB会被自动删除（例如结尾、空行的多余空格或TAB）<br>特别是每次准备提交SVN，Review代码时候你就蛋疼了，显示一堆不相关的更改，看的眼花。<br><br><strong>解决方法：</strong><br>Settings-&gt;IDE Settings-&gt;Editor-&gt;Other-&gt;Strip trailing spaces on Save-&gt;None<br><br><br><br>2、Library Project里面的BuildConfig.DEBUG永远都是false。这是Android Studio的一个已知问题，某Google的攻城狮说，Library projects目前只会生成release的包。<br>Issue 52962: <a href="https://code.google.com/p/android/issues/detail?id=52962" target="_blank" rel="external">https://code.google.com/p/android/issues/detail?id=52962</a><br><br><strong>解决方法：</strong>（某Google的攻城狮推荐的方法）<br>Workaround: instaed of BuildConfig.DEBUG create another boolean variable at lib-project’s e.g. BuildConfig.RELEASE and link it with application’s buildType.<br><a href="https://gist.github.com/almozavr/d59e770d2a6386061fcb" target="_blank" rel="external">https://gist.github.com/almozavr/d59e770d2a6386061fcb</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;####Android在AndroidStudio中添加Module依赖的注意事项&lt;br&gt;我们在开发过程中常常会有一些模块需要作为依赖，或者将部分功能单独抽出作为一个library使用，在Android studio中，我们可以通过建立多个module进行实现。&lt;br&gt;首先
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java运算注意事项</title>
    <link href="http://yoursite.com/2017/08/07/Java%E8%BF%90%E7%AE%97%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://yoursite.com/2017/08/07/Java运算注意事项/</id>
    <published>2017-08-07T00:20:12.738Z</published>
    <updated>2017-08-07T00:20:12.738Z</updated>
    
    <content type="html"><![CDATA[<p>#####java 两个整数相除保留两位小数</p>
<p>java中，当两个整数相除时，由于小数点以后的数字会被截断，运算结果将为整数，此时若希望得到运算结果为浮点数，必须将两整数其一或是两者都强制转换为浮点数。<br>例如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">(<span class="keyword">float</span>)a/b <span class="comment">// 将整数其中一个强制转换为浮点数，再与另一个整数相除</span></div><div class="line">a/(<span class="keyword">float</span>)b</div><div class="line">(<span class="keyword">float</span>)a/(<span class="keyword">float</span>)b <span class="comment">// 将两个整数同时强制转换为浮点数后再相除</span></div><div class="line">Java代码  </div><div class="line"><span class="keyword">float</span> num= (<span class="keyword">float</span>)<span class="number">2</span>/<span class="number">3</span>;   </div><div class="line">DecimalFormat df = <span class="keyword">new</span> DecimalFormat(<span class="string">"0.00"</span>);<span class="comment">//格式化小数   </span></div><div class="line">String s = df.format(num);<span class="comment">//返回的是String类型 </span></div><div class="line"><span class="keyword">double</span> data=<span class="number">5</span>/<span class="number">3</span>;　　<span class="comment">//data =1</span></div><div class="line"><span class="keyword">float</span> data2=<span class="number">5</span>/<span class="number">3</span>;  <span class="comment">//data2=1</span></div><div class="line"></div><div class="line"><span class="keyword">double</span> data3=(<span class="keyword">double</span>) <span class="number">5</span>/<span class="number">3</span> <span class="comment">//data3=1.6666666666666667</span></div><div class="line"><span class="keyword">double</span> data3= <span class="number">5</span>/<span class="number">3</span>d        <span class="comment">//data3=1.6666666666666667</span></div><div class="line"><span class="keyword">float</span> data4=(<span class="keyword">float</span>) <span class="number">5</span>/<span class="number">3</span>   <span class="comment">//data4=1.6666666</span></div><div class="line"><span class="keyword">float</span> data5= <span class="number">5</span>/<span class="number">3f</span>         <span class="comment">//data5=1.6666666</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#####java 两个整数相除保留两位小数&lt;/p&gt;
&lt;p&gt;java中，当两个整数相除时，由于小数点以后的数字会被截断，运算结果将为整数，此时若希望得到运算结果为浮点数，必须将两整数其一或是两者都强制转换为浮点数。&lt;br&gt;例如：&lt;br&gt;&lt;figure class=&quot;high
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git命令详解</title>
    <link href="http://yoursite.com/2017/08/06/Git%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2017/08/06/Git操作/</id>
    <published>2017-08-06T10:34:07.679Z</published>
    <updated>2017-08-06T10:34:07.679Z</updated>
    
    <content type="html"><![CDATA[<p>这个是使用nano进行编辑提交的页面，退出方法为：</p>
<p>Ctrl + X然后输入y再然后回车，就可以退出了</p>
<p>如果你想把默认编辑器换成别的：</p>
<p>在GIT配置中设置 core.editor: git config –global core.editor “vim”</p>
<p>参考：</p>
<p><a href="http://stackoverflow.com/questions/2596805/how-do-i-make-git-use-the-editor-of-my-choice-for-commits" target="_blank" rel="external">http://stackoverflow.com/questions/2596805/how-do-i-make-git-use-the-editor-of-my-choice-for-commits</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个是使用nano进行编辑提交的页面，退出方法为：&lt;/p&gt;
&lt;p&gt;Ctrl + X然后输入y再然后回车，就可以退出了&lt;/p&gt;
&lt;p&gt;如果你想把默认编辑器换成别的：&lt;/p&gt;
&lt;p&gt;在GIT配置中设置 core.editor: git config –global core.e
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>Java运算注意事项</title>
    <link href="http://yoursite.com/2017/08/06/Java%E6%B3%9B%E5%9E%8B%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2017/08/06/Java泛型详解/</id>
    <published>2017-08-06T10:33:13.266Z</published>
    <updated>2017-08-06T10:33:13.266Z</updated>
    
    <content type="html"><![CDATA[<p>###Java泛型<br>在Java开发中，泛型是我们非常频繁使用的知识，它常常与集合一起结伴。<br>泛型是在ＪＤＫ１．５出现的。<br><br><strong>为什么需要它？</strong><br><br>编译期检查，参数化.<br>我们以集合Ｌｉｓｔ为例<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">List             mList;</div><div class="line">List&lt;String&gt;     mListByString ;</div></pre></td></tr></table></figure></p>
<p>一个是原始的集合Ｌｉｓｔ，一个是泛型化的Ｌｉｓｔ<br>（泛型是在ＪＤＫ１．５出现，官方推荐从那时起尽量使用泛型化的集合，但原生的集合依然可以使用Ｌｉｓｔ、Ｓｅｔ，主要是为了向前兼容，业界已经存在了大量使用原生集合的代码）<br><br>那么上面的两种不同格式有何区别？<br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mList.add(<span class="string">"123"</span>);   　　　　　<span class="comment">//正常</span></div><div class="line">mList.add(<span class="number">123</span>);   　　　　　　<span class="comment">//正常</span></div><div class="line"></div><div class="line">mListByString.add(<span class="string">"123"</span>);　　<span class="comment">//正常</span></div><div class="line">mListByString.add(<span class="number">123</span>);     <span class="comment">//编译报错</span></div></pre></td></tr></table></figure></p>
<p>上面我分别往mList和mListByString添加一个String和一个int,添加了２个类型不同的值，<br><br>当然正常情况下，我们可能只希望添加String类型的值，但无意中就像样例中一样添加了一个ｉｎｔ类型的值。其中原生Ｌｉｓt编译正常，而以String 为参数的泛型List则在编译时报错。</p>
<p>下面是我们在其他地方使用上面两个Ｌｉｓｔ<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">String name1=mList.get(<span class="number">0</span>);</div><div class="line">String name2=mList.get(<span class="number">1</span>);</div><div class="line"></div><div class="line">String name3=mListByString.get(<span class="number">0</span>);</div><div class="line">String name4=mListByString.get(<span class="number">1</span>);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###Java泛型&lt;br&gt;在Java开发中，泛型是我们非常频繁使用的知识，它常常与集合一起结伴。&lt;br&gt;泛型是在ＪＤＫ１．５出现的。&lt;br&gt;&lt;br&gt;&lt;strong&gt;为什么需要它？&lt;/strong&gt;&lt;br&gt;&lt;br&gt;编译期检查，参数化.&lt;br&gt;我们以集合Ｌｉｓｔ为例&lt;br&gt;&lt;b
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>RecyclerView高度适应问题</title>
    <link href="http://yoursite.com/2017/08/06/RecyclerView%E9%AB%98%E5%BA%A6%E9%80%82%E5%BA%94%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/08/06/RecyclerView高度适应问题/</id>
    <published>2017-08-05T16:00:00.000Z</published>
    <updated>2017-08-06T10:20:30.871Z</updated>
    
    <content type="html"><![CDATA[<p>RecyclerView高度适应问题</p>
<p>#####ItemView大小固定<br>ItemView大小固定的情况下，根据ItemView的宽高调整recyclerview的宽高，以达到recyclerview刚好显示N行/列数据的目的：<br>原理是重写LayoutManager的onMeasure方法，计算itemview的宽高，进而计算出recyclerview的宽高。<br>比如，一个垂直列表，希望recyclerview刚好显示三行，这样写：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">recyclerView.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>) &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(RecyclerView.Recycler recycler, RecyclerView.State state, <span class="keyword">int</span> widthSpec, <span class="keyword">int</span> heightSpec)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (getChildCount() &gt; <span class="number">0</span>) &#123;</div><div class="line">            View firstChildView = recycler.getViewForPosition(<span class="number">0</span>);</div><div class="line">            measureChild(firstChildView, widthSpec, heightSpec);</div><div class="line">            setMeasuredDimension(View.MeasureSpec.getSize(widthSpec), firstChildView.getMeasuredHeight()*<span class="number">3</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">super</span>.onMeasure(recycler, state, widthSpec, heightSpec);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>#####ItemView大小不固定</p>
<p>#####ItemView适应RecyclerView<br>RecyclerView大小固定的情况下，根据RecyclerView的宽高设置ItemView的宽高，以达到recyclerview刚好显示N行/列数据的目的：<br>在原理是先计算出RecyclerView的宽高，然后在Adapter的onCreateViewHolder中设置view的高度：<br>比如一个垂直列表，希望recyclerview刚好显示三行，这样写：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="keyword">public</span> ClubServiceAdapter.<span class="function">ServiceItemViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</div><div class="line">    View view = LayoutInflater.from(parent.getContext()).inflate(布局文件, parent, <span class="keyword">false</span>);</div><div class="line">    view.getLayoutParams().height = mRecyclerViewHeight/<span class="number">3</span>;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ServiceItemViewHolder(view);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>#####设置ItemView的间隔高宽</p>
<p>重写ItemDecoration的getItemOffsets函数即可：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">recycleview.addItemDecoration(<span class="keyword">new</span> RecyclerView.ItemDecoration() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getItemOffsets</span><span class="params">(Rect outRect, View view, RecyclerView parent, RecyclerView.State state)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.getItemOffsets(outRect, view, parent, state);</div><div class="line">        outRect.set(<span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>);<span class="comment">//设置itemView中内容相对边框左，上，右，下距离</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RecyclerView高度适应问题&lt;/p&gt;
&lt;p&gt;#####ItemView大小固定&lt;br&gt;ItemView大小固定的情况下，根据ItemView的宽高调整recyclerview的宽高，以达到recyclerview刚好显示N行/列数据的目的：&lt;br&gt;原理是重写Layo
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android的Fragment详解</title>
    <link href="http://yoursite.com/2017/08/04/FragmentTransaction%E4%BD%BF%E7%94%A8%E8%AF%A6%E7%BB%86%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2017/08/04/FragmentTransaction使用详细解析/</id>
    <published>2017-08-03T16:00:00.000Z</published>
    <updated>2017-08-06T10:35:32.124Z</updated>
    
    <content type="html"><![CDATA[<p>###FragmentTransaction使用详细解析</p>
<p>####先来一个完整操作Fragment的例子<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mFragmentManager = getSupportFragmentManager();</div><div class="line">mFragmentTransaction = mFragmentManager.beginTransaction();</div><div class="line">mFragmentTransaction.add(R.id.id_main_content,fragment1);</div><div class="line">mFragmentTransaction.commit();</div></pre></td></tr></table></figure></p>
<p>我们是通过FragmentManager来对Fragment进行管理，其中API3.0之后可以在Activity通过getFragmentManager方法获取到FragmentManager实例，当然也可以通过Support包的getSupportFragmentManager方法获取。<br>其中我们是通过FragmentTransaction(事物)来进行一次完整的针对Fragment操作的（添加、替换、删除Fragment）.</p>
<p>######问题–如果多次执行add()方法会怎么样子？<br>导致重叠，如下图片<br><img src="/images/两个fragment叠加.png" alt="样例"></p>
<p>####添加、替换、删除、隐藏、获取Fragment</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###FragmentTransaction使用详细解析&lt;/p&gt;
&lt;p&gt;####先来一个完整操作Fragment的例子&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div cla
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android开发错误集锦</title>
    <link href="http://yoursite.com/2017/08/03/%E5%BC%80%E5%8F%91%E9%94%99%E8%AF%AF%E9%9B%86%E9%94%A6/"/>
    <id>http://yoursite.com/2017/08/03/开发错误集锦/</id>
    <published>2017-08-03T13:03:24.261Z</published>
    <updated>2017-08-03T13:03:24.261Z</updated>
    
    <content type="html"><![CDATA[<p>###Android开发错误集锦</p>
<p>#####１、NULLPoint空指针<br>Activity生命周期结束，导致其中的持有Actiｖity引用的定时任务的引用变为ｎｕｌｌ。</p>
<p>####2、ClassCastException<br>多出现在强制类型转变上</p>
<p>#####３、命令行启动avd报错<br>在tools的目录下   ./emulator -netdelay none -netspeed full -avd Nexus23<br>可能报错   </p>
<p>######./emulator -netdelay none -netspeed full -avd api25</p>
<p>emulator: ERROR: This AVD’s configuration is missing a kernel file! Please ensure the file “kernel-ranchu” is in the same location as your system image.<br>emulator: ERROR: ANDROID_SDK_ROOT is undefined</p>
<p>解决方法 ：给root添加<br>export PATH=/home/stormbaron/android-sdk-linux/platform-tools/:$PATH</p>
<p>######新的问题<br> libGL error: unable to load driver: i965_dri.so<br>libGL error: driver pointer missing<br>libGL error: failed to load driver: i965<br>libGL error: unable to load driver: i965_dri.so<br>libGL error: driver pointer missing<br>libGL error: failed to load driver: i965<br>libGL error: unable to load driver: swrast_dri.so<br>libGL error: failed to load driver: swrast<br>X Error of failed request:  GLXBadContext<br>  Major opcode of failed request:  155 (GLX)<br>  Minor opcode of failed request:  6 (X_GLXIsDirect)<br>  Serial number of failed request:  55<br>  Current serial number in output stream:  54<br>emulator: ERROR: This AVD’s configuration is missing a kernel file! Please ensure the file “kernel-ranchu” is in the same location as your system image.<br>emulator: ERROR: ANDROID_SDK_ROOT is undefined<br>解决方法<br> Rather than launching the emulator from Android Studio, open the terminal and cd into the tools directory withing your Android SDK directory - mine is ~/Android/Sdk/tools. From there run the command:<br></p>
<p>LD_PRELOAD=’/usr/$LIB/libstdc++.so.6’ DISPLAY=:0 ./emulator -avd <insert avd="" name="" here="">    </insert></p>
<p>####４、Spinner点击item无反应<br>原因：adapter的list来源于异步线程执行的网络请求，可能导致adpter异常，将list换成一个固定的列表值后正常。</p>
<p>####５、The error of install apk<br><em>INSTALL_FAILED_NO_MATCHING_ABIS</em>  is when you are trying to install an app that has native libraries and it doesn’t have a native library for your cpu architecture. For example if you compiled an app for armv7 and are trying to install it on an emulator that uses the Intel architecture instead it will not work.　　</p>
<p>####６、java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState</p>
<p>###Android Studio</p>
<p>####1、多个Module依赖了相同的第三方包，在打包编译时会爆出重复的错误。<br>涉及compile,provided,apk之间的区别，compile是指该第三方包始终被需要（编译、打包、发布、测试）<br>provided是指该第三方包编译时需要，不会被打包进apk中</p>
<p>####2、java.lang.SecurityException: MODE_WORLD_READABLE no longer supported<br>在新版本7.0的Android API中在进行getSharedPreferences时不再支持<br>4中模式：</p>
<p>四种模式，分别为：<br>Context.MODE_PRIVATE    = 0<br>Context.MODE_APPEND    = 32768<br>Context.MODE_WORLD_READABLE = 1<br>Context.MODE_WORLD_WRITEABLE = 2<br>7.0后<br>代码调用，存放在data/data/包名/xxx<br>目录下的文件设置<br>Context.MODE_WORLD_READABLE = 1<br>Context.MODE_WORLD_WRITEABLE = 2<br>会抛安全异常！！！</p>
<p>改用<br>MODE_PRIVATE</p>
<p>####3、android.database.sqlite.SQLiteException: table videoinfo_table already exists (code 1): , while compiling: create table videoinfo_table(_id integer primary key autoincrement,title text,path text,imagePath text,size real,position real,duration real)</p>
<p>####4、Android studio 打包<br>Error:(11) Error: “main_title” is not translated in “en” (English) [MissingTranslation]<br>Error:Execution failed for task ‘:app:lintVitalRelease’.</p>
<blockquote>
<p>Lint found fatal errors while assembling a release target.<br>  To proceed, either fix the issues identified by lint, or modify your build script as follows:<br>  …<br>  android {<br>      lintOptions {<br>          checkReleaseBuilds false<br>          // Or, if you prefer, you can continue to check for errors in release builds,<br>          // but continue the build even when errors are found:<br>          abortOnError false<br>      }<br>  }<br>  …<br>在打包的时候String.xml 中出现了问题<br>在build.gradle<br>   //添加如下配置就ok了<br>    lintOptions {<br>        checkReleaseBuilds false<br>        abortOnError false<br>    }</p>
</blockquote>
<p>####５、Adb 安装APK时报错<br>打开cmd 跳转到adb.exe所在的目录文件夹下 （D:\android-sdk-windows\platform-tools）：<br>adb install  abc.apk(如果此apk没有在当前目录下，还需要带上绝对路径，否则无法找到此apk)<br>这些错误基本是在 cmd 命令行安装时遇到的。</p>
<p>INSTALL_FAILED_ALREADY_EXISTS                 程序已经存在<br>INSTALL_FAILED_INVALID_APK                     无效的APK<br>INSTALL_FAILED_INVALID_URI                     无效的链接<br>INSTALL_FAILED_INSUFFICIENT_STORAGE          没有足够的存储空间<br>INSTALL_FAILED_DUPLICATE_PACKAGE             已存在同名程序<br>INSTALL_FAILED_NO_SHARED_USER                要求的共享用户不存在<br>INSTALL_FAILED_UPDATE_INCOMPATIBLE           版本不能共存<br>INSTALL_FAILED_SHARED_USER_INCOMPATIBLE     需求的共享用户签名错误<br>INSTALL_FAILED_MISSING_SHARED_LIBRARY       需求的共享库已丢失<br>INSTALL_FAILED_REPLACE_COULDNT_DELETE      需求的共享库无效<br>INSTALL_FAILED_DEXOPT                          dex优化验证失败<br>INSTALL_FAILED_OLDER_SDK                      系统版本过旧<br>INSTALL_FAILED_CONFLICTING_PROVIDER          存在同名的内容提供者<br>INSTALL_FAILED_NEWER_SDK                      系统版本过新<br>INSTALL_FAILED_TEST_ONLY                      调用者不被允许测试的测试程序<br>INSTALL_FAILED_CPU_ABI_INCOMPATIBLE         包含的本机代码不兼容<br>CPU_ABIINSTALL_FAILED_MISSING_FEATURE       使用了一个无效的特性<br>INSTALL_FAILED_CONTAINER_ERROR              SD卡访问失败<br>INSTALL_FAILED_INVALID_INSTALL_LOCATION     无效的安装路径<br>INSTALL_FAILED_MEDIA_UNAVAILABLE            SD卡不存在<br>INSTALL_FAILED_INTERNAL_ERROR                系统问题导致安装失败<br>DEFAULT                                          未知错误</p>
<p>###Fragment相关</p>
<p>####(1)java.lang.IllegalStateException异常产生的原因及解决办法<br>Can not perform this action after onSaveInstanceState<br><br>错误类型大致为以下几种：<br>java.lang.IllegalStateException：Cannot   forward   a   response   that   is   already   committed <br><br>IllegalStateException：response already commited <br><br>IllegalStateException：getOutputStream() has already been called for this request<br>…..<br><br>IllegalStateException: Can not perform this action after onSaveInstanceState：<br><br><strong>解决办法</strong>：onSaveInstanceState方法是在该Activity即将被销毁前调用，来保存Activity数据的，如果在保存完状态后<br>再给它添加Fragment就会出错。解决办法就是把commit（）方法替换成 commitAllowingStateLoss()</p>
<p>#####(２)java.lang.IllegalStateException<br>Expected BEGIN_ARRAY but was BEGIN_OBJECT at line 1 column 37 path $.data<br><br>错误原因：该异常是由于服务器错误返回的JSON字符串和服务器正常下时返回的JSON字符串结构不同,导致利用Gson解析的时候报了一个异常:本该去解析集合却强制去解析对象所致.<br>解决办法:在使用Gson解析JSON时try cash一下,不报错按照正常逻辑继续解析,报异常则处理为请求失败逻辑即可.</p>
<p>#####(3)FATAL EXCEPTION: main Process: com.julit.elevator_maint, PID: 2158<br>java.lang.RuntimeException: Unable to instantiate application<br> com.juli.elevator_ivms.app.DemoApp: java.lang.ClassNotFoundException: Didn’t find class “com.juli.elevator_ivms.app.DemoApp” on path: DexPathList[[zip file “/data/app/com.julit.elevator_maint-1/base.apk”],nativeLibraryDirectories=[/data/app/com.julit.elevator_maint-1/lib/arm, /data/app/com.julit.elevator_maint-1/base.apk!/lib/armeabi-v7a, /vendor/lib, /system/lib]]</p>
<p>#####(4)错误：Error:Execution failed for task ‘:app:mergeDebugResources’.</p>
<blockquote>
<p>Some file crunching failed, see logs for details</p>
</blockquote>
<p>原因：这是图片格式错了</p>
<p>解决：不要把图片的后缀直接修改为.png</p>
<p>######(５)ERROR: 9-patch image<br>项目中有9-patch用ant脚本来编译的时候有错，如果直接用eclipse打包就没有问题<br> ERROR: 9-patch image /home/stormbaron/work/GitProject/Company/JuliSale_AS/app/src/main/res/drawable-hdpi/search_bar_edit_pressed.9.png malformed.<br>AAPT:        Frame pixels must be either solid or transparent (not intermediate alphas).<br>AAPT:        Found at pixel #15 along top edge.</p>
<p>解决方案　：那张图有问题，.9.png图，顶部和左侧必须要设置拉伸区域（右侧和底部可以不设置）否则会报错</p>
<p>######(６)<br> Execution failed for task ‘:app:transformResourcesWithMergeJavaResForDebug’.</p>
<blockquote>
<p>com.android.build.api.transform.TransformException: com.android.builder.packaging.DuplicateFileException: Duplicate files copied in APK META-INF/LICENSE<br>      File1: /home/stormbaron/work/GitProject/Company/JuliSale_AS/app/libs/httpclient-4.3.1.jar<br>      File2: /home/stormbaron/work/GitProject/Company/JuliSale_AS/app/libs/httpcore-4.3.jar<br>貌似说两个包里面的文件重复了还是怎么的，谷歌了一番之后据说应该是 android studio 自身的bug<br>解决办法：<br>打开项目下面的 build.gradle 文件，在 android 代码块中添加下面代码<br>[sql] view plain copy<br>android {<br>    packagingOptions {<br>        exclude ‘META-INF/DEPENDENCIES’<br>        exclude ‘META-INF/NOTICE’<br>        exclude ‘META-INF/LICENSE’<br>        exclude ‘META-INF/LICENSE.txt’<br>        exclude ‘META-INF/NOTICE.txt’<br>    }<br>}  </p>
</blockquote>
<p>将这些文件全部排出掉就ok了</p>
<p>######(７)git init 产生的目录解释<br>error: src refspec master does not match any.<br>引起该错误的原因是，目录中没有文件，空目录是不能提交上去的</p>
<p>####网络权限问题（6.0之后的申请）<br>所有需要使用的权限都必须在Mainfest中进行申明，6.0以后的动态获取，只是针对你所申明的权限做的一个授权，如果你在Mainfest中没有进行申明的话，动态权限的框不会显示</p>
<p>####Java Method Call Expected<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">incListener</span></span>&#123;&#125;</div><div class="line"><span class="comment">//报错的使用</span></div><div class="line">increase.addActionListener(incListener());</div><div class="line"><span class="comment">//正确的使用</span></div><div class="line">increase.addActionListener(<span class="keyword">new</span> incListener());</div></pre></td></tr></table></figure></p>
<p>#####Android studio在使用打包时（buildToolsVersion）<br>Error:In <declare-styleable> ConstraintSet, unable to find attribute android:elevation<br>　　　这个问题主要和api的版本问题有关(原本是20报错，改成21后正常)<br>    compileSdkVersion 21<br>    buildToolsVersion “25.0.1”</declare-styleable></p>
<p>####Activity与Fragment需要相匹配</p>
<p>android.view.InflateException: Binary XML file line #9: Error inflating class fragment</p>
<p>当我们用的Activity时</p>
<p>应当  import android.app.Fragment.</p>
<p>当我们用的FragmentActivity 或者appcompatactivity(待验证)</p>
<p>应当 import android.support.v4.app.Fragment</p>
<p>否则在Activity是无法识别android.support.v4.app.Fragment的</p>
<p>####Fragment导致的空指针<br>java.lang.NullPointerException</p>
<p>Attempt to write to field ‘int android.support.v4.app.Fragment.mNextAnim’ on a null object reference</p>
<p>一个原因导致：在fragment为null的时候show或hide或remove了。所以在对Fragment进行操作前一定要进行判断。</p>
<p>#####Gson错误<br>java.lang.IllegalStateException: Expected BEGIN_ARRAY but was BEGIN_OBJECT at line 1 column 2 path $<br>分析原因：在使用解析之前要先分析后台返回的是一个object还是一个array</p>
<p>#####Retrofit错误<br> java.lang.IllegalStateException: Already executed.<br> at retrofit2.OkHttpCall.enqueue(OkHttpCall.java:84)<br><br>原因：多次执行call.enqueue</p>
<p>java.lang.IllegalArgumentException: baseUrl must end in /: <a href="http://erp.joylive.com:10030/service.json" target="_blank" rel="external">http://erp.joylive.com:10030/service.json</a></p>
<p>java.lang.IllegalArgumentException: Unable to create call adapter for interface retrofit2.Call<br>=0  WEBRESENDSEGS=0  WEBRECVSEGS=1  WEBERRSEGS=0  WEBOUTRSTS=0  WEBESTABLISRST=0  WEBRTTDURATION=0  WEBRTTSEGS=0  WEBSNDDUPACKS=0  suckTimes=0 recovage_times=5]</p>
<p>####Android页面错误<br>android.view.WindowLeaked: Activity com.suda.julisale.utils.ImageGetActivity has leaked window com.android.internal.policy.impl.PhoneWindow$DecorView{4333be18 V.E….. R……D 0,0-684,192} that was originally added here</p>
<p>多次调用Dialog的hide</p>
<p>####调用Intent时，需要显性声明，否则报错（5.0系统以后）<br>java.lang.IllegalArgumentException:Service Intent must be explicit: Intent { act=com.easi.mobile.locator.MobileLocatorService }</p>
<p>public class ShutdownBroadcastReceiver extends BroadcastReceiver {  </p>
<pre><code>private static final String ACTION_SHUTDOWN = &quot;android.intent.action.ACTION_SHUTDOWN&quot;;  

@Override  
public void onReceive(Context context, Intent intent) {

    if (intent.getAction().equals(ACTION_SHUTDOWN)) {


        SharedPreferences sp = context.getSharedPreferences(&quot;MobileLocator&quot;, Context.MODE_PRIVATE);  
        sp.edit().putString(&quot;instruct&quot;, &quot;exit&quot;).commit();  

        context.stopService(new Intent(PushGpsInfoService.ACTION_MOBILE_LOCATOR_SERVICE));
    }  

}  
</code></pre><p>}  </p>
<h4 id="Drawerlayout在代码中控制打开和关闭时报错"><a href="#Drawerlayout在代码中控制打开和关闭时报错" class="headerlink" title="Drawerlayout在代码中控制打开和关闭时报错"></a>Drawerlayout在代码中控制打开和关闭时报错</h4><p>   java.lang.IllegalArgumentException: No drawer view found with gravity LEFT<br>   解决办法:<br>   除了上面那段代码以外，还要在xml中，抽屉部分中增加：</p>
<p> android:layout_gravity=”left”</p>
<p>####org.json.JSONException: End of input at character 0 of<br>Json在获取时，对应是空值</p>
<h4 id="Glide错误"><a href="#Glide错误" class="headerlink" title="Glide错误"></a>Glide错误</h4><p>E/dex2oat: Failed to create oat file: /data/dalvik-cache/x86/data@app@com.example.stormbaron.agank-2@split_lib_dependencies_apk.apk@classes.dex: Permission denied</p>
<p>####Rxjava 使用时可能遇到的问题　Duplicate files copied in APK META-INF/rxjava.properties<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Error:Execution failed for task ':app:transformResourcesWithMergeJavaResForDebug'. &gt; com.android.build.api.transform.TransformException: com.android.builder.packaging.DuplicateFileException: Duplicate files copied in APK META-INF/rxjava.properties     File1: /home/stormbaron/.android/build-cache/79c3bd52eead62f9651d4f1445d26e97af7ad05b/output/jars/classes.jar     File2: /home/stormbaron/work/gradle-3.4/caches/modules-2/files-2.1/io.reactivex/rxjava/1.0.14/898f9ab61e2a23afd615f0b0389478bec86f49f9/rxjava-1.0.14.jar</div></pre></td></tr></table></figure></p>
<p>可用的解决方法：<br>  packagingOptions {<br>        exclude ‘META-INF/rxjava.properties’<br>    }</p>
<h4 id="当Glide正在对某个View进行操作时，如果进行setTag操作会报错"><a href="#当Glide正在对某个View进行操作时，如果进行setTag操作会报错" class="headerlink" title="当Glide正在对某个View进行操作时，如果进行setTag操作会报错"></a>当Glide正在对某个View进行操作时，如果进行setTag操作会报错</h4><p>java.lang.IllegalArgumentException: You must not call setTag() on a view Glide is targeting</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###Android开发错误集锦&lt;/p&gt;
&lt;p&gt;#####１、NULLPoint空指针&lt;br&gt;Activity生命周期结束，导致其中的持有Actiｖity引用的定时任务的引用变为ｎｕｌｌ。&lt;/p&gt;
&lt;p&gt;####2、ClassCastException&lt;br&gt;多出现在强制类
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android测试</title>
    <link href="http://yoursite.com/2017/08/03/Android%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2017/08/03/Android测试/</id>
    <published>2017-08-03T07:19:35.962Z</published>
    <updated>2017-08-03T07:19:35.962Z</updated>
    
    <content type="html"><![CDATA[<p>###Android测试<br>测试在开发中的地位无需多言，在Android开发中，我们最离不开的应该是　单元测试，同时我们也希望对UI页面的各类点击事件进行测试。</p>
<p>####单元测试　（JUnit）<br>JUnit是我们在进行单元测试常用的测试框架，使用方式<br>首先我们需要添加一下依赖，<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">testCompile <span class="string">'junit:junit:4.12'</span></div></pre></td></tr></table></figure></p>
<p>在开始编写junit测试之前，需要为其新建一个目录。通常，这个会被叫做test，会和main文件夹平级。在Android studio创建项目时一般会自动生成相关目录。<br><img src="./images/testPath.png" alt="样例"></p>
<p>#####编写测试样例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.junit.Test;</div><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> junit.framework.Assert.assertEquals;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleUnitTest</span> </span>&#123;</div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addition_isCorrect</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        assertEquals(<span class="number">8</span>, <span class="number">2</span> * <span class="number">4</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>#####运行测试<br>直接在Android studio中右击项目，然后点击　“Run AllTests”就可以运行，运行结果如下:</p>
<p>######代码运行正常<br><img src="./images/testExample2.png" alt="样例"></p>
<p>######代码出现Ｂug<br><img src="./images/testExample3.png" alt="样例"></p>
<p>####关联Android sdk代码(Robolectric)</p>
<p>####功能测试(Espresso)</p>
<p>注意：功能测试需要放在AndroidTest目录下，下面是测试用例：</p>
<p>####测试覆盖率</p>
<p>一旦你在你的项目中使用到了测试，那么你肯定想知道你的测试覆盖量。很真实，依然有很多测试覆盖率工具，我推荐的是Jacoco。</p>
<p>Jacoco</p>
<p>####代码分析(Android Lint)</p>
<p>####检测工具LeakCanry 和BlockCanary</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###Android测试&lt;br&gt;测试在开发中的地位无需多言，在Android开发中，我们最离不开的应该是　单元测试，同时我们也希望对UI页面的各类点击事件进行测试。&lt;/p&gt;
&lt;p&gt;####单元测试　（JUnit）&lt;br&gt;JUnit是我们在进行单元测试常用的测试框架，使用方式
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux终端操作MySQL常用命令</title>
    <link href="http://yoursite.com/2017/08/03/MySql%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/08/03/MySql命令/</id>
    <published>2017-08-03T06:22:44.094Z</published>
    <updated>2017-08-03T06:22:44.094Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> 
<p> Linux终端操作MySQL常用命令<br>1.终端启动 MySQL：/etc/init.d/mysql start</p>
<p> 2.登录 MySQL：mysql -uroot -p (用 root 账户登录),然后输入密码 </p>
<p>3.查看所有的数据库名字：show databases; </p>
<p>4.选择一个数据库操作： use database_name; </p>
<p>5.查看当前数据库下所有的表名：show tables; </p>
<p>6.创建一个数据库：create database database_name; </p>
<p>7.删除一个数据库：drop database database_name; </p>
<p>8.创建一个表: create table mytest( uid bigint(20) not null primary key, uname varchar(20) not null); </p>
<p>9.删除一个表: drop table mytest; </p>
<p>10.SQL 插入语句：insert into table_name(col1,col2) values(value1,value2); </p>
<p>11.SQL 更新语句：update table_name set col1=’value1’,col2=’value2’ where where_definition; </p>
<p>12.SQL 查询语句：select * from table_name where…….</p>
<p>13.SQL 删除语句：delete from table_name where… </p>
<p>14.增加表结构的字段：alert table table_name add column field1 date ,add column field2 time… </p>
<p>15.删除表结构的字段：alert table table_name drop field1; </p>
<p>16.查看表的结构：show columns from table_name; </p>
<p>17.limit 的使用：select * from table_name limit 3;   //每页只显示 3 行 </p>
<p>select * from table_name limit 3,4;   //从查询结果的第三个开始，显示四项结果。 此处可很好的用来作分页处理。 </p>
<p>18.对查询结果进行排序: select * from table_name order by field1,orderby field2;多重排序 </p>
<p>19.退出 MySQL:exit; </p>
<p>20.删除表中所有数据： truncate table 数据表名称 （不可恢复） Linux终端操作MySQL常用命令<br>2015-09-20 12:29 6368人阅读 评论(1) 收藏 举报<br> 分类： Linux（3）<br>1.终端启动 MySQL：/etc/init.d/mysql start</p>
<p> 2.登录 MySQL：mysql -uroot -p (用 root 账户登录),然后输入密码 </p>
<p>3.查看所有的数据库名字：show databases; </p>
<p>4.选择一个数据库操作： use database_name; </p>
<p>5.查看当前数据库下所有的表名：show tables; </p>
<p>6.创建一个数据库：create database database_name; </p>
<p>7.删除一个数据库：drop database database_name; </p>
<p>8.创建一个表: create table mytest( uid bigint(20) not null primary key, uname varchar(20) not null); </p>
<p>9.删除一个表: drop table mytest; </p>
<p>10.SQL 插入语句：insert into table_name(col1,col2) values(value1,value2); </p>
<p>11.SQL 更新语句：update table_name set col1=’value1’,col2=’value2’ where where_definition; </p>
<p>12.SQL 查询语句：select * from table_name where…….</p>
<p>13.SQL 删除语句：delete from table_name where… </p>
<p>14.增加表结构的字段：alert table table_name add column field1 date ,add column field2 time… </p>
<p>15.删除表结构的字段：alert table table_name drop field1; </p>
<p>16.查看表的结构：show columns from table_name; </p>
<p>17.limit 的使用：select * from table_name limit 3;   //每页只显示 3 行 </p>
<p>select * from table_name limit 3,4;   //从查询结果的第三个开始，显示四项结果。 此处可很好的用来作分页处理。 </p>
<p>18.对查询结果进行排序: select * from table_name order by field1,orderby field2;多重排序 </p>
<p>19.退出 MySQL:exit; </p>
<p>20.删除表中所有数据： truncate table 数据表名称 （不可恢复）</p>
<p>linux下导入、导出mysql数据库命令</p>
<p>一、导出数据库用mysqldump命令（注意mysql的安装路径，即此命令的路径）：<br>1、导出数据和表结构：<br>mysqldump -u用户名 -p密码 数据库名 &gt; 数据库名.sql</p>
<p>#/usr/local/mysql/bin/   mysqldump -uroot -p abc &gt; abc.sql<br>敲回车后会提示输入密码</p>
<p>2、只导出表结构<br>mysqldump -u用户名 -p密码 -d 数据库名 &gt; 数据库名.sql</p>
<p>#/usr/local/mysql/bin/   mysqldump -uroot -p -d abc &gt; abc.sql</p>
<p>注：/usr/local/mysql/bin/  —&gt;  mysql的data目录</p>
<p>二、导入数据库<br>1、首先建空数据库<br>mysql&gt;create database abc;</p>
<p>2、导入数据库<br>方法一：<br>（1）选择数据库<br>mysql&gt;use abc;<br>（2）设置数据库编码<br>mysql&gt;set names utf8;<br>（3）导入数据（注意sql文件的路径）<br>mysql&gt;source /home/abc/abc.sql;<br>方法二：<br>mysql -u用户名 -p密码 数据库名 &lt; 数据库名.sql</p>
<p>#mysql -uabc_f -p abc &lt; abc.sql</p>
<p>建议使用第二种方法导入。</p>
<p>注意：有命令行模式，有sql命令</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt; Linux终端操作MySQL常用命令&lt;br&gt;1.终端启动 MySQL：/etc/init.d/mysql start&lt;/p&gt;
&lt;p&gt; 2.登录 MySQL：mysql -uroot -p (用 root 账户登录),然后输入密码 &lt;/
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java线程</title>
    <link href="http://yoursite.com/2017/08/03/Java_Thread/"/>
    <id>http://yoursite.com/2017/08/03/Java_Thread/</id>
    <published>2017-08-03T06:22:35.858Z</published>
    <updated>2017-08-03T06:22:35.858Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> 
<p>###Java线程<br>sleep(int num) 方法是指当前的线程睡眠 num 时间，在线程的 run 方法中调用（是 Thread 的一个方法），有同学会无意中写在 Runnable 中，发现 sleep     方法始终不被识别。</p>
<p>Object lock = new Object();<br><br>lock 可以执行 wait 和 notify 方法，进行不同线程的状态切换<br><br><br><br>wait() 当前已经获得锁的线程进入等待状态 <br><br>notify() 当前线程结束，并通知处于等待状态的线程继续执行</p>
<p><strong>每个对象都有一把锁</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">Object lock = <span class="keyword">new</span> Object();&lt;br&gt;</div><div class="line"><span class="comment">//线程1中的加锁语句</span></div><div class="line"><span class="keyword">synchronized</span> (lock) &#123;</div><div class="line"><span class="comment">//。。。</span></div><div class="line"><span class="keyword">try</span> &#123;						   </div><div class="line">  lock.wait(); <span class="comment">//当前线程进入等待状态</span></div><div class="line">&#125; </div><div class="line"><span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">  e.printStackTrace();</div><div class="line">&#125;</div><div class="line"><span class="comment">//。。。</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//线程2中的加锁语句</span></div><div class="line"><span class="keyword">synchronized</span> (lock) &#123;</div><div class="line"><span class="comment">//。。。</span></div><div class="line">lock.notify();<span class="comment">//通知启动等待状态的线程开启</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>1、流程1，先 start 线程1，后 start 线程2<br>执行到线程1的加锁语句，此时lock没有加锁顺利执行，然后执行lock.wait();此时lock的锁进入等待状态（可以被其他访问）<br>线程2中的加锁语句就可以拿到锁，执行完语句后，lock.notify()进行了唤醒通知，wait队列中的等待线程开始执行Object lock = new Object();<br></p>
<p>####注意事项<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">new</span> Thread()&#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="comment">//...</span></div><div class="line">&#125;</div><div class="line">&#125;.start();</div></pre></td></tr></table></figure></p>
<p>main()创建 Thread 对象时,它并未捕获任何一个对象的句柄。普通对象对于垃圾收集来说是一种“公平竞<br>赛”,但线程却并非如此。每个线程都会“注册”自己,所以某处实际存在着对它的一个引用。这样一来,<br>垃圾收集器便只好对它“瞠目以对”了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;###Java线程&lt;br&gt;sleep(int num) 方法是指当前的线程睡眠 num 时间，在线程的 run 方法中调用（是 Thread 的一个方法），有同学会无意中写在 Runnable 中，发现 sleep     方法始终不被
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux使用记录</title>
    <link href="http://yoursite.com/2017/08/03/Linux%E4%BD%BF%E7%94%A8%E6%9D%83%E9%99%90/"/>
    <id>http://yoursite.com/2017/08/03/Linux使用权限/</id>
    <published>2017-08-03T06:22:24.146Z</published>
    <updated>2017-08-03T06:22:24.146Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> 
<p>####Linux使用记录</p>
<p>#####(1)文件权限设置<br>ls -l命令列文件表时<br>如果用命令chmod 777 tt.htm，结果是<br><br>-rwxrwxrwx  1 bu users 2254 2006-05-20 13:47 tt.htm<br><br>任何人都有读、写、运行三项权限。<br>用ls -l命令列文件表时，得到如下输出:<br>-rw-r–r–  1 bu users  2254 2006-05-20 13:47 tt.htm<br>从第二个字符起rw-是说用户bu有读、写权，没有运行权，接着的r–表示用户组users只有读权限，没有运行权，最后的r–指其他人（others）只有读权限，没有写权和运行权。这是系统默认设置，我可以改写tt.htm，同组的人和其他人只有权读，没人有权运行，因为只是一个html文件，不必运行。这在Novell的directory services之前很先进。<br>读、写、运行三项权限可以用数字表示，就是r=4,w=2,x=1。所以，上面的例子中的rw-r–r–用数字表示成644。<br>反过来说777就是rwxrwxrwx，意思是该登录用户（可以用命令id查看）、他所在的组和其他人都有最高权限。<br>再多说一句。我用chmod o-r tt.htm命令改权限，o-r是others的权限中减掉读。结果是<br>-rw-r—–  1 bu users 2254 2006-05-20 13:47 tt.htm<br>如果用命令chmod 777 tt.htm，结果是</p>
<p>#####(2)新增系统用户<br>运行 sudo adduser linc 　新建 linc 用户。</p>
<p>[sudo] password for linc:</p>
<p>报错：linc 不在 sudoers 文件中。此事将被报告。<br>解决办法，在sudoers中添加用户</p>
<p>sudo gedit /etc/sudoers　<br></p>
<p>root    ALL=(ALL:ALL) ALL<br><br>linc    ALL=(ALL:ALL) ALL</p>
<p>#####(5)MySql配置<br>首先建立好数据库。在 Gogs 目录的 scripts/mysql.sql 文件是数据库初始化文件。执行 mysql -u root -p &lt; scripts/mysql.sql （需要输入密码）即可初始化好数据库。</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;####Linux使用记录&lt;/p&gt;
&lt;p&gt;#####(1)文件权限设置&lt;br&gt;ls -l命令列文件表时&lt;br&gt;如果用命令chmod 777 tt.htm，结果是&lt;br&gt;&lt;br&gt;-rwxrwxrwx  1 bu users 2254 20
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux常用命令集</title>
    <link href="http://yoursite.com/2017/08/03/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86%E9%94%A6/"/>
    <id>http://yoursite.com/2017/08/03/Linux常用命令集锦/</id>
    <published>2017-08-03T06:22:16.794Z</published>
    <updated>2017-08-03T06:22:16.794Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> 
<p>####Linux常用命令集</p>
<p>######查看目录内容<br>＃ ls <br><br>＃ ls -a  (罗列所有内容包括隐藏的文件)<br><br>＃ atom test.txt (用atom程序打开test.txt文件)</p>
<p>######新建、复制、移动、删除文件<br>＃markdir testFile (新建testFile文件夹)</p>
<p>######清理回收站<br>（1）$su root      //进入root用户模式<br><br>（2）＃cd /home/gyb/.Trash       //进入用户目录下的回收站，其中gyb是我自己建的用户目录<br><br>（3）＃rm –rf *        //清空回收站<br></p>
<p>######Java<br>export JAVA_HOME=/home/baron/work/jdk1.8.0_121<br>export PATH=$JAVA_HOME/bin:$PATH</p>
<p>export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</p>
<p>#####权限不够<br>程序执行权限  #chmod +x  testFile/test.txt<br>修改访问权限　＃chmod 777 testFile/test.txt </p>
<p>######tomcat启动失败</p>
<p>baron@baron-pc:~/work/tomcat-8.5.13/bin$ ./startup.sh<br>Cannot find ./catalina.sh<br>The file is absent or does not have execute permission<br>This file is needed to run this program</p>
<p>解决方法：</p>
<p>依旧在tomcat 的bin目录下 </p>
<p>执行 chmod +x *.sh  </p>
<p>然后用sh startup.sh启动成功</p>
<p>######Wifi<br>(1)＃ifconfig<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">wlp2s0: flags=<span class="number">4099</span>&lt;UP,BROADCAST,MULTICAST&gt;  mtu <span class="number">1500</span></div><div class="line">        ether a0:c5:<span class="number">89</span>:<span class="number">5</span>a:<span class="number">86</span>:<span class="number">06</span>  txqueuelen <span class="number">4096</span>  (Ethernet)</div><div class="line">        RX packets <span class="number">400249</span>  bytes <span class="number">145213400</span> (<span class="number">138.4</span> MiB)</div><div class="line">        RX errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></div><div class="line">        TX packets <span class="number">986439</span>  bytes <span class="number">1071274285</span> (<span class="number">1021.6</span> MiB)</div><div class="line">        TX errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></div></pre></td></tr></table></figure></p>
<p>(2)＃sudo ip link set wlp2s0 up <br><br>(3)＃sudo iw dev wlp2s0 scan | less <br></p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;####Linux常用命令集&lt;/p&gt;
&lt;p&gt;######查看目录内容&lt;br&gt;＃ ls &lt;br&gt;&lt;br&gt;＃ ls -a  (罗列所有内容包括隐藏的文件)&lt;br&gt;&lt;br&gt;＃ atom test.txt (用atom程序打开test.txt文
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Json解析技巧（利用泛型）</title>
    <link href="http://yoursite.com/2017/08/03/Gson%E8%A7%A3%E6%9E%90Json%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/2017/08/03/Gson解析Json数据/</id>
    <published>2017-08-03T06:21:56.978Z</published>
    <updated>2017-08-03T06:21:56.978Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> 
<p>####Json解析技巧（利用泛型）<br>下面是一个比较典型的Json返回格式<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    "success": true,</div><div class="line">    "description": "",</div><div class="line">    "data": [</div><div class="line">        &#123;</div><div class="line">            "pictureNumber": "402848145690b87d01569283d8230527",</div><div class="line">            "companyId": "402848145690b87d01569283d8230527",</div><div class="line">            "itemName": "机房、滑轮间环境：清洁，门窗完好、照明正常 ",</div><div class="line">            "isPicture": "402848145690b87d01569283d8230527",</div><div class="line">            "isQr": "402848145690b87d01569283d8230527",</div><div class="line">            "id": "402848f95be5db65015be5e4ea4d0001"</div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            "pictureNumber": "402848145690b87d01569283d8230527",</div><div class="line">            "companyId": "402848145690b87d01569283d8230527",</div><div class="line">            "itemName": "导靴上油杯：吸油毛毡齐全，油量适宜，油杯无泄露",</div><div class="line">            "isPicture": "402848145690b87d01569283d8230527",</div><div class="line">            "isQr": "402848145690b87d01569283d8230527",</div><div class="line">            "id": "402848f95be5db65015be5e4ea8f000a"</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>一般的Json返回数据有”success”，”description”，这两个相同，主要区别在于”data”<brng><br>我们在利用Gson进行转换时需要利用Json结果转换得到对应实体。<br>为了提高代码重复利用，我们可以利用泛型设计统一的结果数据处理器。</brng></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Json结果转化器</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Result</span>&lt;<span class="title">T</span>&gt; </span>&#123;</div><div class="line">    <span class="keyword">boolean</span> success;</div><div class="line">    String  description;</div><div class="line">    List&lt;T&gt; data;</div><div class="line">&#125;</div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 实体类</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WbOrderItem</span></span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * pictureNumber(拍照数量) : 402848145690b87d01569283d8230527</span></div><div class="line"><span class="comment">     * companyId : 402848145690b87d01569283d8230527</span></div><div class="line"><span class="comment">     * itemName(项次名) : 机房、滑轮间环境：清洁，门窗完好、照明正常　</span></div><div class="line"><span class="comment">     * isPicture（是否拍照）: 402848145690b87d01569283d8230527</span></div><div class="line"><span class="comment">     * isQr （是否扫码）: 402848145690b87d01569283d8230527</span></div><div class="line"><span class="comment">     * id : 402848f95be5db65015be5e4ea4d0001</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="keyword">private</span> String pictureNumber;</div><div class="line">    <span class="keyword">private</span> String companyId;</div><div class="line">    <span class="keyword">private</span> String itemName;</div><div class="line">    <span class="keyword">private</span> String isPicture;</div><div class="line">    <span class="keyword">private</span> String isQr;</div><div class="line">    <span class="keyword">private</span> String id;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;####Json解析技巧（利用泛型）&lt;br&gt;下面是一个比较典型的Json返回格式&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div clas
    
    </summary>
    
      <category term="Http" scheme="http://yoursite.com/categories/Http/"/>
    
    
  </entry>
  
  <entry>
    <title>Http编码格式</title>
    <link href="http://yoursite.com/2017/08/03/Http%E5%86%85%E5%AE%B9%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F/"/>
    <id>http://yoursite.com/2017/08/03/Http内容编码格式/</id>
    <published>2017-08-03T06:21:51.613Z</published>
    <updated>2017-08-03T06:21:51.613Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> 
<p>####Http编码格式<br>Volley中Request默认接收的编码格式为iso-8859-1，后台接口如果没有指定Content-Type:”application/json; charset=UTF-8”的格式，Volley就会默认转成iso-8859-1。<br>Java的String 编码格式转换方式。iso-8859-1为欧洲编码格式，不支持中文。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String str=liftArray.toString();</div><div class="line">str=<span class="keyword">new</span> String(str.getBytes(<span class="string">"iso-8859-1"</span>),<span class="string">"utf-8"</span>);</div></pre></td></tr></table></figure></p>
<p> UTF-8  GBk  Unicode</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;####Http编码格式&lt;br&gt;Volley中Request默认接收的编码格式为iso-8859-1，后台接口如果没有指定Content-Type:”application/json; charset=UTF-8”的格式，Volley就
    
    </summary>
    
      <category term="Http" scheme="http://yoursite.com/categories/Http/"/>
    
    
  </entry>
  
  <entry>
    <title>Gogs使用介绍</title>
    <link href="http://yoursite.com/2017/08/03/Gogs%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2017/08/03/Gogs使用详解/</id>
    <published>2017-08-03T06:21:29.697Z</published>
    <updated>2017-08-03T06:21:29.697Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> 
<p>###Gogs使用介绍<br>Gogs是一款类似Github(国内有码市)的开源文件／代码管理系统（基于Git）<br>Gos官方地址：<a href="http://www.oschina.net/p/gogs/" target="_blank" rel="external">http://www.oschina.net/p/gogs/</a><br><br><strong>目前功能基本介绍</strong><br><br>远程代码仓库管理<br><br>代码仓库权限分配、管理<br><br>团队管理<br><br>代码审查<br></p>
<p>####(1)注册<br><img src="./注册.png" alt="注册"></p>
<hr>
<p>####(2)基本功能介绍</p>
<p>######主面板说明<br><img src="./images/Gogs页面基本.png" alt="基本"></p>
<hr>
<p>图中１表示自己个人账户下的仓库（所有权属于自己）<br><br>图中２表示自己参与的仓库(所有权不属于自己)<br></p>
<p><strong>注意</strong><br><br>自己个人账户下的仓库一般为自己创建，或者其他仓库所有者转让仓库。自己对该仓库具有全部权限（写入／删除文件、增加成员、删除成员、合并分之、审核分之）</p>
<hr>
<p>######新建仓库<br><img src="./images/创建仓库.png" alt="创建仓库"></p>
<hr>
<p>在主面板中点击我的仓库右侧的”+”按钮后进入新建仓库页面，在此页面中我们需哟啊输入仓库的基本描述，并设置可见属性.<br><br><strong>注意</strong><br><br>在创建仓库按钮的上方有一个复选框“使用选定文件和模板初始化仓库”。<br>这里如果不选，则会生成一个空仓库，我们需要在本地生成一个仓库（或者原有仓库），然后将本地仓库的远程仓库地址设置成我们在Gogs中新建的仓库地址。</p>
<hr>
<p>######仓库使用基介绍<br><img src="./images/仓库介绍.png" alt="仓库介绍"></p>
<hr>
<p>图中１仓库中的文件管理页面<br><br>图中２仓库的工单管理页面<br><br>图中３仓库的合并请求管理（代码审查、合并）<br><br>图中４查看代码的分支<br><br>图中５在浏览器中上传和下载文件（不依赖Git）<br><br>图中６当前仓库的远程地址（将其拷贝下来，将本地的对应仓库的origin地址设置）<br><br>图中７当前仓库的文件阅览<br></p>
<hr>
<p>######基于浏览器进行文件上传下载<br><img src="./images/浏览器上传.png" alt="仓库介绍"><br>可以直接在浏览器中进行文件上传</p>
<hr>
<p><img src="./images/gog文档在线查看.png" alt="在线"><br>可以直接在浏览器查看对应文档，或者下载文档</p>
<hr>
<p>######工单管理<br>省略。。。</p>
<p>######合并管理<br>省略。。。</p>
<hr>
<p>####(4)组织管理<br>Git魅力不仅仅体现在对代码的管理，还有有效的管理团队合作上<br></p>
<p>######组织管理介绍<br>Gogs也专门提供了<strong>组织</strong>管理功能（组织可以代表一个公司，可以在<strong>组织</strong>下建立仓库、添加组织成员，然后通过创建和设置团队，将组织名下的仓库分别授权给不同的成员）</p>
<hr>
<p><img src="./images/组织管理.png" alt="仓库组织"><br>图中点击”我的组织”后面的“＋”号可以新建组织</p>
<hr>
<p><img src="./images/组织页面.png" alt="组织页面"></p>
<hr>
<p>图中１显示当前组织下的仓库，点击创建新仓库可以添加新的组织<br><br>图中２显示当前组织中的成员，可以点击邀请其他人，添加新的成员<br><br>图中３显示当前组织下设置的团队（每个团对可以分别添加组织下的不同仓库和不同成员，并设置该团队权限（写入、阅读））<br></p>
<hr>
<p><img src="./images/团队设置.png" alt="团队设置"></p>
<hr>
<p>图中１显示该团队有４名成员<br><br>图中２显示该团队拥有当前组织的２个仓库的权限<br><br>图中３显示该团队对yo拥有的２个仓库具有读取和写入的权限<br></p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;###Gogs使用介绍&lt;br&gt;Gogs是一款类似Github(国内有码市)的开源文件／代码管理系统（基于Git）&lt;br&gt;Gos官方地址：&lt;a href=&quot;http://www.oschina.net/p/gogs/&quot; target=&quot;_
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
  </entry>
  
  <entry>
    <title>Android优化总结</title>
    <link href="http://yoursite.com/2017/08/03/Android%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/08/03/Android优化总结/</id>
    <published>2017-08-03T06:06:25.495Z</published>
    <updated>2017-08-03T06:06:25.495Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> 
<p>一个很典型的内部类持有外部类引用的情况<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mSearchView.setBtnListener(<span class="keyword">new</span> SearchView.BtnListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">()</span> </span>&#123;</div><div class="line">                mSearchView.setText(<span class="string">""</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;一个很典型的内部类持有外部类引用的情况&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Httpp(Volley)使用注意事项</title>
    <link href="http://yoursite.com/2017/08/03/Volley%E8%AF%B7%E6%B1%82%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://yoursite.com/2017/08/03/Volley请求的注意事项/</id>
    <published>2017-08-03T03:46:15.312Z</published>
    <updated>2017-08-03T03:46:15.312Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> 
<p>#####　Httpp(Volley)使用注意事项</p>
<p>#####JSONObjectRequest<br>一般JSONObjectRequest直接将Object放在构造函数里，是直接被放在了请求的Body（RequestBody）中。<br>如果要放在Key-Value　进行传递键值对的话，<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">StringRequest stringRequest = <span class="keyword">new</span> StringRequest(Request.Method.POST, url, <span class="keyword">new</span> Response.Listener&lt;String&gt;() &#123;  </div><div class="line">          <span class="meta">@Override</span>  </div><div class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(String response)</span> </span>&#123;  </div><div class="line">            </div><div class="line">      &#125;, <span class="keyword">new</span> Response.ErrorListener() &#123;  </div><div class="line">          <span class="meta">@Override</span>  </div><div class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onErrorResponse</span><span class="params">(VolleyError error)</span> </span>&#123;  </div><div class="line">          &#125;  </div><div class="line">      &#125;)&#123;  </div><div class="line">          <span class="meta">@Override</span>  </div><div class="line">          <span class="function"><span class="keyword">protected</span> Map&lt;String, String&gt; <span class="title">getParams</span><span class="params">()</span> <span class="keyword">throws</span> AuthFailureError </span>&#123;  </div><div class="line">              Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();  </div><div class="line">              map.put(<span class="string">"cityname"</span>,<span class="string">"朝阳"</span>);  </div><div class="line">              <span class="keyword">return</span> map;  </div><div class="line">          &#125;  </div><div class="line"></div><div class="line">          <span class="meta">@Override</span>  </div><div class="line">          <span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getHeaders</span><span class="params">()</span> <span class="keyword">throws</span> AuthFailureError </span>&#123;  </div><div class="line">              Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();  </div><div class="line">              map.put(<span class="string">"apikey"</span>,<span class="string">"f71e5f1e08cd5a7e42a7e9aa70d22458"</span>);  </div><div class="line">              <span class="keyword">return</span> map;  </div><div class="line">          &#125;  </div><div class="line">      &#125;;  </div><div class="line">      mQueue.add(stringRequest);</div></pre></td></tr></table></figure></p>
<p>stringRequest进行Post请求中如果需要携带Key-Value键值对，可以直接重写getParams()方法。<br>但是在JsonObjectRequest进行Post请求中如果需要携带Key-Value键值对，不能通过直接重写getParams()方法来实现。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/** </span></div><div class="line"><span class="comment"> * 不想自定义，非得用JsonObjectRequestPost不可，只要你不嫌麻烦。 </span></div><div class="line"><span class="comment"> */</span>  </div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">jsonObjectRequestPostSuccess2</span><span class="params">()</span></span>&#123;  </div><div class="line">    String url = <span class="string">"http://route.showapi.com/213-3"</span>;  </div><div class="line">    Map&lt;String,String&gt; params = DummyData.getDummyData();  </div><div class="line">    <span class="keyword">final</span> String mRequestBody = appendParameter(url,params);  </div><div class="line">  </div><div class="line">    JsonObjectRequest jsonObjectRequest = <span class="keyword">new</span> JsonObjectRequest(Request.Method.POST,url,<span class="keyword">null</span>, <span class="keyword">new</span> Response.Listener&lt;JSONObject&gt;() &#123;  </div><div class="line">        <span class="meta">@Override</span>  </div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(JSONObject response)</span> </span>&#123;  </div><div class="line">            responseText.setText(response.toString());  </div><div class="line">        &#125;  </div><div class="line">    &#125;, <span class="keyword">new</span> Response.ErrorListener() &#123;  </div><div class="line">        <span class="meta">@Override</span>  </div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onErrorResponse</span><span class="params">(VolleyError error)</span> </span>&#123;  </div><div class="line">            responseText.setText(error.getMessage());  </div><div class="line">        &#125;  </div><div class="line">    &#125;)&#123;  </div><div class="line">        <span class="meta">@Override</span>  </div><div class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getBodyContentType</span><span class="params">()</span> </span>&#123;  </div><div class="line">            <span class="keyword">return</span> <span class="string">"application/x-www-form-urlencoded; charset="</span> + getParamsEncoding();  </div><div class="line">        &#125;  </div><div class="line">  </div><div class="line">        <span class="meta">@Override</span>  </div><div class="line">        <span class="keyword">public</span> <span class="keyword">byte</span>[] getBody() &#123;  </div><div class="line">            <span class="keyword">try</span> &#123;  </div><div class="line">                <span class="keyword">return</span> mRequestBody == <span class="keyword">null</span> ? <span class="keyword">null</span> : mRequestBody.getBytes(PROTOCOL_CHARSET);  </div><div class="line">            &#125; <span class="keyword">catch</span> (UnsupportedEncodingException uee) &#123;  </div><div class="line">                VolleyLog.wtf(<span class="string">"Unsupported Encoding while trying to get the bytes of %s using %s"</span>,  </div><div class="line">                        mRequestBody, PROTOCOL_CHARSET);  </div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;  </div><div class="line">            &#125;  </div><div class="line">        &#125;  </div><div class="line">    &#125;;  </div><div class="line">    mQueue.add(jsonObjectRequest);  </div><div class="line">&#125;  </div><div class="line">  </div><div class="line"><span class="function"><span class="keyword">private</span> String <span class="title">appendParameter</span><span class="params">(String url,Map&lt;String,String&gt; params)</span></span>&#123;  </div><div class="line">    Uri uri = Uri.parse(url);  </div><div class="line">    Uri.Builder builder = uri.buildUpon();  </div><div class="line">    <span class="keyword">for</span>(Map.Entry&lt;String,String&gt; entry:params.entrySet())&#123;  </div><div class="line">        builder.appendQueryParameter(entry.getKey(),entry.getValue());  </div><div class="line">    &#125;  </div><div class="line">    <span class="keyword">return</span> builder.build().getQuery();  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;#####　Httpp(Volley)使用注意事项&lt;/p&gt;
&lt;p&gt;#####JSONObjectRequest&lt;br&gt;一般JSONObjectRequest直接将Object放在构造函数里，是直接被放在了请求的Body（RequestB
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Volley 请求后台数据中文乱码问题解决</title>
    <link href="http://yoursite.com/2017/08/03/Volley%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/08/03/Volley中文乱码问题/</id>
    <published>2017-08-03T03:46:10.264Z</published>
    <updated>2017-08-03T03:46:10.264Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> 
<h4 id="Volley-请求后台数据中文乱码问题解决"><a href="#Volley-请求后台数据中文乱码问题解决" class="headerlink" title="Volley 请求后台数据中文乱码问题解决"></a>Volley 请求后台数据中文乱码问题解决</h4><p>Volley是Google家的网络框架，轻量简便，但是在使用过程中发现，部分接口存在中文乱码的问题，对，就是部分接口，而且经过检查发现获取的数据是<strong>iso-8859-1</strong>格式的（坑爹的试了很久），当时临时进行转换得到的。<br>java中字符串格式转换方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">resp = <span class="keyword">new</span> String(result.getBytes(<span class="string">"iso-8859-1"</span>), <span class="string">"UTF-8"</span>);</div></pre></td></tr></table></figure></p>
<p><strong>问题：</strong><br>为什么后台说明是返回的<strong>UTF-8</strong>格式的数据，但是（最要命的就是但是，坑啊）获取到到的却是<strong>iso-8859-1</strong>？<br>通过查看Volley的源码，发现在StringRequest　，JsonObjectRequest<br>发现在StringRequest，JsonObjectRequest中都通过下面这个方法返回结果，其中对结果进行了处理<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> Response&lt;String&gt; <span class="title">parseNetworkResponse</span><span class="params">(NetworkResponse response)</span> </span>&#123;</div><div class="line">       String parsed;</div><div class="line">       <span class="keyword">try</span> &#123;</div><div class="line">           parsed = <span class="keyword">new</span> String(response.data, HttpHeaderParser.parseCharset(response.headers));</div><div class="line">       &#125; <span class="keyword">catch</span> (UnsupportedEncodingException var4) &#123;</div><div class="line">           parsed = <span class="keyword">new</span> String(response.data);</div><div class="line">       &#125;</div><div class="line">       <span class="keyword">return</span> Response.success(parsed, HttpHeaderParser.parseCacheHeaders(response));</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>关键来了有木有，发现其中同样利用了上面提到的格式转换方法，其中格式获取通过<strong>HttpHeaderParser.parseCharset(response.headers)</strong><br>我们继续看一下这个方法的代码，如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">parseCharset</span><span class="params">(Map&lt;String, String&gt; headers)</span> </span>&#123;</div><div class="line">       String contentType = (String)headers.get(<span class="string">"Content-Type"</span>);</div><div class="line">       <span class="keyword">if</span>(contentType != <span class="keyword">null</span>) &#123;</div><div class="line">           String[] params = contentType.split(<span class="string">";"</span>);</div><div class="line"></div><div class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; params.length; ++i) &#123;</div><div class="line">               String[] pair = params[i].trim().split(<span class="string">"="</span>);</div><div class="line">               <span class="keyword">if</span>(pair.length == <span class="number">2</span> &amp;&amp; pair[<span class="number">0</span>].equals(<span class="string">"charset"</span>)) &#123;</div><div class="line">                   <span class="keyword">return</span> pair[<span class="number">1</span>];</div><div class="line">               &#125;</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       <span class="keyword">return</span> <span class="string">"ISO-8859-1"</span>;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>这个方法，目的是从结果的headers中获取编码格式，但有个前提就是后台必须给你明确了编码格式，如果后台没有明确编码格式，这个方法就会默认返回一个”ISO-8859-1”，比较坑爹啊。</p>
<p><strong>解决方法</strong>，StringQuest和JsonObjectQuest处理方法一样，都可以重写parseNetworkResponse方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">   <span class="comment">//创建StringRequest</span></div><div class="line">StringRequest request = <span class="keyword">new</span> StringRequest(Request.Method.GET, url, <span class="keyword">new</span> Response.Listener&lt;String&gt;() &#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(String response)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mCallBack != <span class="keyword">null</span>) &#123;</div><div class="line">            mCallBack.onSuccess(response);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;, <span class="keyword">new</span> Response.ErrorListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onErrorResponse</span><span class="params">(VolleyError error)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mCallBack != <span class="keyword">null</span>) &#123;</div><div class="line">            mCallBack.onError(error);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;)&#123;</div><div class="line">    <span class="function"><span class="keyword">protected</span> Response&lt;String&gt;  <span class="title">parseNetworkResponse</span><span class="params">(NetworkResponse response)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        String parsed;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            parsed = <span class="keyword">new</span> String(response.data, <span class="string">"UTF-8"</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException var4) &#123;</div><div class="line">            parsed = <span class="keyword">new</span> String(response.data);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> Response.success(parsed, HttpHeaderParser.parseCacheHeaders(response));</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">mQueue.add(request);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;h4 id=&quot;Volley-请求后台数据中文乱码问题解决&quot;&gt;&lt;a href=&quot;#Volley-请求后台数据中文乱码问题解决&quot; class=&quot;headerlink&quot; title=&quot;Volley 请求后台数据中文乱码问题解决&quot;&gt;&lt;/a&gt;Voll
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一行代码实现Android的网络图片加载、点击查看大图、滑动放大、拖动、显示加载动画</title>
    <link href="http://yoursite.com/2017/08/03/MySql%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2017/08/03/MySql命令行详解/</id>
    <published>2017-08-03T03:45:56.120Z</published>
    <updated>2017-08-03T03:45:56.120Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> 
<p>####　一行代码实现Android的网络图片加载、点击查看大图、滑动放大、拖动、显示加载动画<br>图片的加载几乎是一款APP所必备的功能了，我们在处理图片基本会涉及到图片的网络加载、点击查看大图、能够拖动放大、滑动查看细节,同时希望在加载过程中还能有加载动画。<br>通过封装后，现在<strong>一条链式代码</strong>就能轻松实现上述所有需求,实现姿态就像使用Glide那样通过链式调用。<br><strong>举个栗子</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ImageLoaderManager.getInstance().load(mSmallUrl)</div><div class="line">                .setPlaceHolder(R.mipmap.ic_launcher)</div><div class="line">                .setBigUrl(mBigUrl)</div><div class="line">                .setIsCrossFade(<span class="keyword">true</span>)</div><div class="line">                .setIsSkipMemoryCache(<span class="keyword">true</span>)</div><div class="line">                .into(holder.mImg);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;####　一行代码实现Android的网络图片加载、点击查看大图、滑动放大、拖动、显示加载动画&lt;br&gt;图片的加载几乎是一款APP所必备的功能了，我们在处理图片基本会涉及到图片的网络加载、点击查看大图、能够拖动放大、滑动查看细节,同时希望
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MPAndroidChart使用记录</title>
    <link href="http://yoursite.com/2017/08/03/MPAndroidChart/"/>
    <id>http://yoursite.com/2017/08/03/MPAndroidChart/</id>
    <published>2017-08-03T03:45:51.217Z</published>
    <updated>2017-08-03T03:45:51.217Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a> 
<p>#MPAndroidChart使用记录</p>
<p>#####<a href="">概述</a></p>
<p>#####<a href="">样例</a></p>
<p>#####<a href="">特色设置</a></p>
<p>####概述<br>MPAndoridChart提供了非常丰富的图表类型可供使用,如 BarChart、LineChart、PieChart、RadarChart<br>虽然不同图表实现不同，但是都遵循了相同的封装逻辑，每种图表涉及到的划分都是以下4个类的实体相互依赖来起作用。<br><br> <strong>核心类</strong><br> <br><br> <strong>XXXChart </strong>   (BarChart)<br><br> <strong>XXXData  </strong>   (BarDat)<br><br> <strong>XXXDataSet </strong> (BarDatSet)<br><br> <strong>XXXEntry </strong>   (BarEntry)<br><br> <br><br> 4个类之间的相互关系<br><br>  <strong>XXXChart</strong> =&gt; <strong>XXXData</strong> =&gt; <strong>XXXDataSet</strong> =&gt;      <strong>XXXEntry</strong> </p>
<p>XXXChart 是图表类（也就是实际绘出图表的类） <br><br>XXXData 是数据类(XXXChart 直接依赖的数据封装类，是一个总的数据类) <br><br>XXXDataSet 是数据封装类（XXXData 依赖的一个组的数据封装类，XXXData 可以接受一个到多个 XXXDataSet，可以设置数据的形态等<br><br>XXXEntry 则是数据单元（）<br><br><br><br><strong>格式设置类</strong><br><br>YAxis、XAxis 是 XXXChart 的内部类，通过chart.getXAxis()方法来获取，可以设置X、Y的的显示内容，显示刻度，显示位置，标签颜色等</p>
<p>####样例<br>   BarChart<br><br>  <img src="./mpandroid_barchart.png" alt="BarChart"> <br><br>  1、XML中引用BarChart<br></p>
<pre><code>&lt;com.github.mikephil.charting.charts.BarChart
android:id=&quot;@+id/mp_workshop1_left&quot;
android:layout_width=&quot;match_parent&quot;
android:layout_height=&quot;match_parent&quot; /&gt;
</code></pre><p>  <br>  2、配置数据（元数据点）</p>
<pre><code>@BindView(R.id.mp_workshop1_left)
BarChart mLeftChart;
//坐标点的组
private List&lt;BarEntry&gt;  mBarEntries=new   ArrayList&lt;BarEntry&gt;();
private BarDataSet mBarDataSet;
private BarData mBarData;
public void intView(){
    for(int i=0;i&lt;10 ;i++){
        mBarEntries.add(new BarEntry(i,i*10));
    }
    //将一组基本数据点封装到一个BarDataSet实例中，并设置标签
    mBarDataSet=new BarDataSet(mBarEntries,&quot;生产数据&quot;);
    //设置mBarDataSet中这组Bar的颜色
    mBarDataSet.setColor(Color.rgb(70,130,180));
    //将设置好的BarDataSet实例封装到一个BarData实例中，
    mBarData=new BarData(mBarDataSet);
    //给BarChart设置BarData
    mLeftChart.setData(mBarData);
    //绘制
    mLeftChart.invalidate();
}
</code></pre><p> 3、设置X、Y轴格式</p>
<pre><code>//从BarChart中获取XAxis、YAxis的实例
YAxis leftAxis = mChart.getAxisLeft();
YAxis rightAxis = mChart.getAxisRight();
 XAxis xAxis = mChart.getXAxis();
 //Y周起始位置为0
leftAxis.setStartAtZero(true);
rightAxis.setStartAtZero(true);

xAxis.setAvoidFirstLastClipping(true);
//X轴标签在下部
xAxis.setPosition(XAxis.XAxisPosition.BOTTOM);
//自定义设置X轴标签
xAxis.setValueFormatter(new IAxisValueFormatter() {
    @Override
    public String getFormattedValue(float value, AxisBase axis) {
        if(value==1){
            return &quot;周一&quot;;
        }
        if(value==2){
            return &quot;周二&quot;;
        }
        if(value==3){
            return &quot;周三&quot;;
        }
        if(value==4){
            return &quot;周四&quot;;
        }
        if(value==5){
            return &quot;周五&quot;;
        }
        if(value==6){
            return &quot;周六&quot;;
        }
        if(value==6){
            return &quot;周日&quot;;
        }
        return &quot;&quot;;
    }
});
</code></pre><p>4、设置图表描述<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">　　　　Description md=<span class="keyword">new</span> Description();</div><div class="line">md.setText(<span class="string">"一次校验合格率"</span>);</div><div class="line">md.setTextColor(Color.rgb(<span class="number">139</span>, <span class="number">0</span>, <span class="number">0</span>));</div><div class="line">md.setTextSize(<span class="number">30</span>);<span class="comment">//单位是”像素”</span></div><div class="line">md.setPosition(<span class="number">500</span>,<span class="number">30</span>);<span class="comment">//单位是”像素”</span></div><div class="line">mChart.setDescription(md);</div></pre></td></tr></table></figure></p>
<p>5、设置标签<br> 默认情况下，所有的图表类型都支持 Legend 且在设置图表数据后会自动生成 Legend 。<br>Legend 通常由一个标签的 形式/形状 来表示多个条目( entries ) 的每一个。<br>entries 数量自动生成的 legend 取决于DataSet 的标签 不同颜色的数量（在所有 DataSet 的对象）。 Legend 的标签取决于图表中所使用的 DataSet 对象。 如果没有为 DataSet 对象指定标签，图表将自动生成它们。 如果多个颜色用于一个 DataSet ，这些颜色分类 ，只通过一个标签说明。<br><br>对于定制的 Legend ，可以通过图表对象的 getLegend() 方法先获取 Legen 在进行调用对应方法：</p>
<pre><code>Legend legend = chart.getLegend();
</code></pre><p>   legend.setTextColor(Color.WHITE); //设置每个分组标签的颜色</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt; 
&lt;p&gt;#MPAndroidChart使用记录&lt;/p&gt;
&lt;p&gt;#####&lt;a href=&quot;&quot;&gt;概述&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#####&lt;a href=&quot;&quot;&gt;样例&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#####&lt;a href=&quot;&quot;&gt;特色设置&lt;/a&gt;&lt;/p&gt;
&lt;p
    
    </summary>
    
    
  </entry>
  
</feed>
